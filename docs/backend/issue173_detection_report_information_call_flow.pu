@startuml
title Detection Report 
-> ReactApp: getDetectionReport()
ReactApp -> FlaskApp: request_detection_report_data(did)
activate FlaskApp
  == fetching information == 
  FlaskApp -> Document: fetchDetReportInfo(dbconn)
  activate Document
    Document -> Document: setDname()
    Document -> Document: setActiveModule()
    Document -> Document: setModuleCounts()
    group setSentences() - loop for every sentences
    Document -> Sentence: create()
      activate Sentence
        Document -> Sentence: setErrorInfo()
        Document -> Sentence: highlightOriginalContent()
      deactivate Sentence
    Document -> Document: appendSentences()
    end
  == getting information == 
    Document -> Document: initializeInfoDict()
    group setSentences() - loop for every sentences
      activate Sentence
        Document -> Sentence: getOriginalHighlightedContent()
      deactivate Sentence
    end
    Document -> Document: convertDictToJson()
  deactivate Document
  Document --> FlaskApp: return DetReportInfo
deactivate FlaskApp
FlaskApp --> ReactApp: return detection report information
ReactApp -> ReactApp: addTimestamp()
<-- ReactApp: detectionreport
@enduml